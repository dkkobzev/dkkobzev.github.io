<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Academic</title>
    <link>http://localhost:1313/tag/academic/</link>
      <atom:link href="http://localhost:1313/tag/academic/index.xml" rel="self" type="application/rss+xml" />
    <description>Academic</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sat, 06 Apr 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Academic</title>
      <link>http://localhost:1313/tag/academic/</link>
    </image>
    
    <item>
      <title>Неделя 1-7 апреля</title>
      <link>http://localhost:1313/post/week2/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/week2/</guid>
      <description>&lt;h2 id=&#34;c&#34;&gt;C++&lt;/h2&gt;
&lt;p&gt;На этой неделе я решил сфокусироваться на изучении классов в C++. Они представляли для меня определённый вызов, но я справился. Практиковался на различных задачах, и каждый раз, когда код работал правильно, это был настоящий праздник для меня.&lt;/p&gt;
&lt;h2 id=&#34;командная-оболочка-midnight-commander&#34;&gt;Командная оболочка Midnight Commander&lt;/h2&gt;
&lt;p&gt;Эту неделю я занимался изучением интерфейса Unix через Midnight Commander. Начал с основных команд и постепенно перешёл к более сложным задачам. Хотя в начале было непросто, но с каждым днём я становился более уверенным в работе с командной оболочкой Midnight Commander.&lt;/p&gt;
&lt;h2 id=&#34;физическая-активность&#34;&gt;Физическая Активность&lt;/h2&gt;
&lt;p&gt;На этой неделе я продолжил заниматься спортом. Регулярные посещения зала помогли сохранить форму и поддержать энергию. После тренировок я всегда чувствовал себя бодрым и готовым к новым задачам.&lt;/p&gt;
&lt;h2 id=&#34;вывод&#34;&gt;Вывод&lt;/h2&gt;
&lt;p&gt;Моя неделя была наполнена разнообразными занятиями, и я чувствую, что проделал огромную работу. Несмотря на несколько моментов напряжения, я нашел радость в учебе, спорте и новых знаниях. Это подтверждает, что продуктивность и стремление к саморазвитию помогают сделать каждый день особенным и насыщенным.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Что такое язык разметки Markdown?</title>
      <link>http://localhost:1313/post/markdown/</link>
      <pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/markdown/</guid>
      <description>&lt;h2 id=&#34;погружение-в-мир-markdown-простота-и-эффективность&#34;&gt;Погружение в мир Markdown: Простота и Эффективность&lt;/h2&gt;
&lt;p&gt;Сегодня я хочу поговорить с вами о языке разметки Markdown. Если вы когда-либо сталкивались с написанием текстов для веб-страниц, блогов или документации, то, вероятно, слышали о Markdown. Этот язык разметки стал неотъемлемой частью жизни многих программистов, блогеров и писателей благодаря своей простоте и эффективности.&lt;/p&gt;
&lt;h2 id=&#34;что-такое-markdown&#34;&gt;Что такое Markdown?&lt;/h2&gt;
&lt;p&gt;Markdown — это легковесный язык разметки, который позволяет быстро и легко форматировать текст, добавляя структуру и стиль. Одним из ключевых преимуществ Markdown является его простота. В отличие от сложных систем разметки, таких как HTML, Markdown использует простые символы и синтаксис, что делает его быстрым в освоении даже для новичков.&lt;/p&gt;
&lt;h2 id=&#34;преимущества-markdown&#34;&gt;Преимущества Markdown&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Простота использования: Markdown основан на обычном тексте, поэтому его легко понять и использовать. Вы можете начать писать в Markdown всего за несколько минут.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Поддержка везде: Многие платформы, такие как GitHub, Reddit, и Stack Overflow, поддерживают разметку Markdown, что делает его универсальным инструментом для создания контента для интернета.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Гибкость: В Markdown можно использовать различные уровни заголовков, списки, цитаты, изображения, ссылки и многое другое, делая его подходящим для широкого спектра задач.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Читаемость: Код в Markdown легко читается в исходном виде. Это делает его идеальным для совместной работы и поддержки документации проекта.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;заключение&#34;&gt;Заключение&lt;/h2&gt;
&lt;p&gt;Markdown — это мощный и удобный инструмент для создания структурированного контента в интернете. Независимо от того, пишете ли вы код, статьи или документацию, Markdown поможет вам сделать это быстро и эффективно. Если вы еще не знакомы с Markdown, рекомендую попробовать его и убедиться в его удобстве самостоятельно!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Неделя 11-17 марта</title>
      <link>http://localhost:1313/post/week1/</link>
      <pubDate>Sat, 16 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/week1/</guid>
      <description>&lt;h2 id=&#34;c&#34;&gt;C++&lt;/h2&gt;
&lt;p&gt;На этой неделе я решил сфокусироваться на изучении классов в C++. Они представляли для меня определённый вызов, но я справился. Практиковался на различных задачах, и каждый раз, когда код работал правильно, это был настоящий праздник для меня.&lt;/p&gt;
&lt;h2 id=&#34;изучение-интерфейса-unix&#34;&gt;Изучение интерфейса Unix&lt;/h2&gt;
&lt;p&gt;Также эта неделя была посвящена изучению интерфейса Unix на уровне командной строки. Я начал с основных команд и постепенно двигался к более сложным задачам. Хотя это было непросто в начале, но с течением времени я стал более уверенным в работе с терминалом Unix.&lt;/p&gt;
&lt;h2 id=&#34;физическая-активность&#34;&gt;Физическая Активность&lt;/h2&gt;
&lt;p&gt;На прошлой неделе я продолжил заниматься спортом. Регулярные посещения зала помогли сохранить форму и поддержать энергию. После тренировок я всегда чувствовал себя бодрым и готовым к новым задачам.&lt;/p&gt;
&lt;h2 id=&#34;python-и-число-пи&#34;&gt;Python и число Пи&lt;/h2&gt;
&lt;p&gt;В добавок, я погрузился в изучение методов нахождения числа π и освоил написание программ на Python для его вычисления. Это был увлекательный взгляд в мир математики и программирования, который расширил мой кругозор и открыл новые возможности.&lt;/p&gt;
&lt;h2 id=&#34;вывод&#34;&gt;Вывод&lt;/h2&gt;
&lt;p&gt;Моя неделя была наполнена разнообразными занятиями, и я чувствую, что проделал огромную работу. Несмотря на несколько моментов напряжения, я нашел радость в учебе, спорте и новых знаниях. Это подтверждает, что продуктивность и стремление к саморазвитию помогают сделать каждый день особенным и насыщенным.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Что такое CI/CD</title>
      <link>http://localhost:1313/post/ci-cd/</link>
      <pubDate>Sat, 16 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/ci-cd/</guid>
      <description>&lt;h2 id=&#34;что-такое-cicd-понимание-и-применение-в-современной-разработке-программного-обеспечения&#34;&gt;Что такое CI/CD: Понимание и Применение в Современной Разработке Программного Обеспечения&lt;/h2&gt;
&lt;p&gt;CI/CD - это сокращение от Continuous Integration (непрерывная интеграция) и Continuous Delivery (непрерывная доставка). Эти концепции представляют собой ключевые практики в современной разработке программного обеспечения, направленные на автоматизацию процессов разработки, тестирования и развертывания приложений.&lt;/p&gt;
&lt;h2 id=&#34;continuous-integration&#34;&gt;Continuous Integration&lt;/h2&gt;
&lt;p&gt;Непрерывная интеграция - это методология, в которой разработчики регулярно интегрируют свой код в общее хранилище кода (например, репозиторий Git), где он автоматически собирается и проверяется с помощью автоматизированных тестов. Это позволяет выявлять и устранять конфликты интеграции и ошибки в коде на ранних стадиях разработки, что способствует более быстрой и стабильной поставке программного обеспечения.&lt;/p&gt;
&lt;h2 id=&#34;continuous-delivery&#34;&gt;Continuous Delivery&lt;/h2&gt;
&lt;p&gt;Непрерывная доставка - практика автоматизации процесса развертывания каждой успешно собранной и протестированной версии программного обеспечения в среду испытаний или продакшн. Это позволяет разработчикам доставлять изменения в приложение быстро, безопасно и надежно, минимизируя риск возможных проблем при развертывании.&lt;/p&gt;
&lt;h2 id=&#34;зачем-это-нужно&#34;&gt;Зачем это нужно&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Ускорение Разработки: CI/CD позволяет автоматизировать процессы сборки, тестирования и развертывания, что значительно сокращает время, затрачиваемое на каждый этап разработки.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Повышение Качества: Автоматические тесты, включенные в CI/CD процесс, помогают выявлять и исправлять ошибки в коде на ранних стадиях разработки, что улучшает качество программного обеспечения.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Уменьшение Рисков: Непрерывная доставка позволяет разработчикам часто и безопасно доставлять изменения в продакшн среду, что уменьшает риск возникновения проблем и откатов.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Повышение Эффективности: CI/CD позволяет автоматизировать рутинные задачи, такие как сборка и развертывание, освобождая время для более важных задач, таких как разработка новых функций и улучшение пользовательского опыта.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;заключение&#34;&gt;Заключение&lt;/h2&gt;
&lt;p&gt;CI/CD стал неотъемлемой частью современной разработки программного обеспечения, обеспечивая ускорение процесса разработки, повышение надежности и эффективности поставки программного обеспечения. Внедрение этих практик позволяет организациям быть более гибкими, адаптивными и конкурентоспособными на рынке программных продуктов.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
